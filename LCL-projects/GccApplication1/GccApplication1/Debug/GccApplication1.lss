
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800200  0000020c  00000280  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000020c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002a4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002d4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000314  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000116c  00000000  00000000  00000354  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ca9  00000000  00000000  000014c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004d8  00000000  00000000  00002169  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000078  00000000  00000000  00002644  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000637  00000000  00000000  000026bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000045e  00000000  00000000  00002cf3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00003151  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	86 c0       	rjmp	.+268    	; 0x112 <__bad_interrupt>
   6:	00 00       	nop
   8:	84 c0       	rjmp	.+264    	; 0x112 <__bad_interrupt>
   a:	00 00       	nop
   c:	82 c0       	rjmp	.+260    	; 0x112 <__bad_interrupt>
   e:	00 00       	nop
  10:	80 c0       	rjmp	.+256    	; 0x112 <__bad_interrupt>
  12:	00 00       	nop
  14:	7e c0       	rjmp	.+252    	; 0x112 <__bad_interrupt>
  16:	00 00       	nop
  18:	7c c0       	rjmp	.+248    	; 0x112 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	7a c0       	rjmp	.+244    	; 0x112 <__bad_interrupt>
  1e:	00 00       	nop
  20:	78 c0       	rjmp	.+240    	; 0x112 <__bad_interrupt>
  22:	00 00       	nop
  24:	76 c0       	rjmp	.+236    	; 0x112 <__bad_interrupt>
  26:	00 00       	nop
  28:	74 c0       	rjmp	.+232    	; 0x112 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	72 c0       	rjmp	.+228    	; 0x112 <__bad_interrupt>
  2e:	00 00       	nop
  30:	70 c0       	rjmp	.+224    	; 0x112 <__bad_interrupt>
  32:	00 00       	nop
  34:	6e c0       	rjmp	.+220    	; 0x112 <__bad_interrupt>
  36:	00 00       	nop
  38:	6c c0       	rjmp	.+216    	; 0x112 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	6a c0       	rjmp	.+212    	; 0x112 <__bad_interrupt>
  3e:	00 00       	nop
  40:	68 c0       	rjmp	.+208    	; 0x112 <__bad_interrupt>
  42:	00 00       	nop
  44:	66 c0       	rjmp	.+204    	; 0x112 <__bad_interrupt>
  46:	00 00       	nop
  48:	64 c0       	rjmp	.+200    	; 0x112 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	62 c0       	rjmp	.+196    	; 0x112 <__bad_interrupt>
  4e:	00 00       	nop
  50:	60 c0       	rjmp	.+192    	; 0x112 <__bad_interrupt>
  52:	00 00       	nop
  54:	5e c0       	rjmp	.+188    	; 0x112 <__bad_interrupt>
  56:	00 00       	nop
  58:	5c c0       	rjmp	.+184    	; 0x112 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	5a c0       	rjmp	.+180    	; 0x112 <__bad_interrupt>
  5e:	00 00       	nop
  60:	58 c0       	rjmp	.+176    	; 0x112 <__bad_interrupt>
  62:	00 00       	nop
  64:	56 c0       	rjmp	.+172    	; 0x112 <__bad_interrupt>
  66:	00 00       	nop
  68:	54 c0       	rjmp	.+168    	; 0x112 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	52 c0       	rjmp	.+164    	; 0x112 <__bad_interrupt>
  6e:	00 00       	nop
  70:	50 c0       	rjmp	.+160    	; 0x112 <__bad_interrupt>
  72:	00 00       	nop
  74:	4e c0       	rjmp	.+156    	; 0x112 <__bad_interrupt>
  76:	00 00       	nop
  78:	4c c0       	rjmp	.+152    	; 0x112 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	4a c0       	rjmp	.+148    	; 0x112 <__bad_interrupt>
  7e:	00 00       	nop
  80:	48 c0       	rjmp	.+144    	; 0x112 <__bad_interrupt>
  82:	00 00       	nop
  84:	46 c0       	rjmp	.+140    	; 0x112 <__bad_interrupt>
  86:	00 00       	nop
  88:	44 c0       	rjmp	.+136    	; 0x112 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	42 c0       	rjmp	.+132    	; 0x112 <__bad_interrupt>
  8e:	00 00       	nop
  90:	40 c0       	rjmp	.+128    	; 0x112 <__bad_interrupt>
  92:	00 00       	nop
  94:	3e c0       	rjmp	.+124    	; 0x112 <__bad_interrupt>
  96:	00 00       	nop
  98:	3c c0       	rjmp	.+120    	; 0x112 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	3a c0       	rjmp	.+116    	; 0x112 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	38 c0       	rjmp	.+112    	; 0x112 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	36 c0       	rjmp	.+108    	; 0x112 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	34 c0       	rjmp	.+104    	; 0x112 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	32 c0       	rjmp	.+100    	; 0x112 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	30 c0       	rjmp	.+96     	; 0x112 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	2e c0       	rjmp	.+92     	; 0x112 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	2c c0       	rjmp	.+88     	; 0x112 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	2a c0       	rjmp	.+84     	; 0x112 <__bad_interrupt>
  be:	00 00       	nop
  c0:	28 c0       	rjmp	.+80     	; 0x112 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	26 c0       	rjmp	.+76     	; 0x112 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	24 c0       	rjmp	.+72     	; 0x112 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	22 c0       	rjmp	.+68     	; 0x112 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	20 c0       	rjmp	.+64     	; 0x112 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	1e c0       	rjmp	.+60     	; 0x112 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	1c c0       	rjmp	.+56     	; 0x112 <__bad_interrupt>
  da:	00 00       	nop
  dc:	1a c0       	rjmp	.+52     	; 0x112 <__bad_interrupt>
  de:	00 00       	nop
  e0:	18 c0       	rjmp	.+48     	; 0x112 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ec e0       	ldi	r30, 0x0C	; 12
  fc:	f2 e0       	ldi	r31, 0x02	; 2
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 32       	cpi	r26, 0x24	; 36
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	3f d0       	rcall	.+126    	; 0x18e <main>
 110:	7b c0       	rjmp	.+246    	; 0x208 <_exit>

00000112 <__bad_interrupt>:
 112:	76 cf       	rjmp	.-276    	; 0x0 <__vectors>

00000114 <_Z7LCD_cmdh>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 114:	85 b9       	out	0x05, r24	; 5
 116:	82 b1       	in	r24, 0x02	; 2
 118:	8e 7f       	andi	r24, 0xFE	; 254
 11a:	82 b9       	out	0x02, r24	; 2
 11c:	82 b1       	in	r24, 0x02	; 2
 11e:	8d 7f       	andi	r24, 0xFD	; 253
 120:	82 b9       	out	0x02, r24	; 2
 122:	82 b1       	in	r24, 0x02	; 2
 124:	84 60       	ori	r24, 0x04	; 4
 126:	82 b9       	out	0x02, r24	; 2
 128:	83 ec       	ldi	r24, 0xC3	; 195
 12a:	99 e0       	ldi	r25, 0x09	; 9
 12c:	01 97       	sbiw	r24, 0x01	; 1
 12e:	f1 f7       	brne	.-4      	; 0x12c <_Z7LCD_cmdh+0x18>
 130:	00 c0       	rjmp	.+0      	; 0x132 <_Z7LCD_cmdh+0x1e>
 132:	00 00       	nop
 134:	82 b1       	in	r24, 0x02	; 2
 136:	8b 7f       	andi	r24, 0xFB	; 251
 138:	82 b9       	out	0x02, r24	; 2
 13a:	08 95       	ret

0000013c <_Z9LCD_writeh>:
 13c:	85 b9       	out	0x05, r24	; 5
 13e:	82 b1       	in	r24, 0x02	; 2
 140:	81 60       	ori	r24, 0x01	; 1
 142:	82 b9       	out	0x02, r24	; 2
 144:	82 b1       	in	r24, 0x02	; 2
 146:	8d 7f       	andi	r24, 0xFD	; 253
 148:	82 b9       	out	0x02, r24	; 2
 14a:	82 b1       	in	r24, 0x02	; 2
 14c:	84 60       	ori	r24, 0x04	; 4
 14e:	82 b9       	out	0x02, r24	; 2
 150:	83 ec       	ldi	r24, 0xC3	; 195
 152:	99 e0       	ldi	r25, 0x09	; 9
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <_Z9LCD_writeh+0x18>
 158:	00 c0       	rjmp	.+0      	; 0x15a <_Z9LCD_writeh+0x1e>
 15a:	00 00       	nop
 15c:	82 b1       	in	r24, 0x02	; 2
 15e:	8b 7f       	andi	r24, 0xFB	; 251
 160:	82 b9       	out	0x02, r24	; 2
 162:	08 95       	ret

00000164 <_Z16LCD_Write_StringPc>:

}
//*****************write STRING on LCD*****************//

void LCD_Write_String(char *a)
{
 164:	0f 93       	push	r16
 166:	1f 93       	push	r17
 168:	cf 93       	push	r28
 16a:	df 93       	push	r29
 16c:	8c 01       	movw	r16, r24
  int i;
  for(i=0;a[i]!='\0';i++)
 16e:	c0 e0       	ldi	r28, 0x00	; 0
 170:	d0 e0       	ldi	r29, 0x00	; 0
 172:	f8 01       	movw	r30, r16
 174:	ec 0f       	add	r30, r28
 176:	fd 1f       	adc	r31, r29
 178:	80 81       	ld	r24, Z
 17a:	88 23       	and	r24, r24
 17c:	19 f0       	breq	.+6      	; 0x184 <_Z16LCD_Write_StringPc+0x20>
  {
    char big = a[i];
    LCD_write(big);
 17e:	de df       	rcall	.-68     	; 0x13c <_Z9LCD_writeh>
//*****************write STRING on LCD*****************//

void LCD_Write_String(char *a)
{
  int i;
  for(i=0;a[i]!='\0';i++)
 180:	21 96       	adiw	r28, 0x01	; 1
 182:	f7 cf       	rjmp	.-18     	; 0x172 <_Z16LCD_Write_StringPc+0xe>
  {
    char big = a[i];
    LCD_write(big);
  }
  
}
 184:	df 91       	pop	r29
 186:	cf 91       	pop	r28
 188:	1f 91       	pop	r17
 18a:	0f 91       	pop	r16
 18c:	08 95       	ret

0000018e <main>:
#define EN PA2

int main(void) {
    
  while (1) {
    DDRB = 0xFF; // PORT B data output
 18e:	8f ef       	ldi	r24, 0xFF	; 255
 190:	84 b9       	out	0x04, r24	; 4
    DDRA = 0x07; // 0000 0111 => 0x07
 192:	87 e0       	ldi	r24, 0x07	; 7
 194:	81 b9       	out	0x01, r24	; 1
 196:	83 ec       	ldi	r24, 0xC3	; 195
 198:	99 e0       	ldi	r25, 0x09	; 9
 19a:	01 97       	sbiw	r24, 0x01	; 1
 19c:	f1 f7       	brne	.-4      	; 0x19a <main+0xc>
 19e:	00 c0       	rjmp	.+0      	; 0x1a0 <main+0x12>
 1a0:	00 00       	nop
  
    // init_LCD(); // init LCD
    _delay_ms(10);
  
    LCD_cmd(0x0C); // display on cursor off
 1a2:	8c e0       	ldi	r24, 0x0C	; 12
 1a4:	b7 df       	rcall	.-146    	; 0x114 <_Z7LCD_cmdh>
 1a6:	83 ec       	ldi	r24, 0xC3	; 195
 1a8:	99 e0       	ldi	r25, 0x09	; 9
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <main+0x1c>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <main+0x22>
 1b0:	00 00       	nop
    _delay_ms(10);
  
    LCD_Write_String("jaimin__chokhawala");
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	92 e0       	ldi	r25, 0x02	; 2
 1b6:	d6 df       	rcall	.-84     	; 0x164 <_Z16LCD_Write_StringPc>
 1b8:	87 ea       	ldi	r24, 0xA7	; 167
 1ba:	91 e6       	ldi	r25, 0x61	; 97
 1bc:	01 97       	sbiw	r24, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <main+0x2e>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <main+0x34>
    _delay_ms(100);
    //LCD_cmd(0x18);
    //LCD_cmd(0x18);
    LCD_cmd(0x0);
 1c2:	00 00       	nop
 1c4:	80 e0       	ldi	r24, 0x00	; 0
    LCD_write('|');
 1c6:	a6 df       	rcall	.-180    	; 0x114 <_Z7LCD_cmdh>
 1c8:	8c e7       	ldi	r24, 0x7C	; 124
  
    LCD_cmd(0xC0); // move cursor to start of second line
 1ca:	b8 df       	rcall	.-144    	; 0x13c <_Z9LCD_writeh>
 1cc:	80 ec       	ldi	r24, 0xC0	; 192
 1ce:	a2 df       	rcall	.-188    	; 0x114 <_Z7LCD_cmdh>
 1d0:	87 ea       	ldi	r24, 0xA7	; 167
 1d2:	91 e6       	ldi	r25, 0x61	; 97
 1d4:	01 97       	sbiw	r24, 0x01	; 1
 1d6:	f1 f7       	brne	.-4      	; 0x1d4 <main+0x46>
    _delay_ms(100);
    LCD_cmd(0x1C);
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <main+0x4c>
 1da:	00 00       	nop
    LCD_cmd(0x1C);
 1dc:	8c e1       	ldi	r24, 0x1C	; 28
 1de:	9a df       	rcall	.-204    	; 0x114 <_Z7LCD_cmdh>
 1e0:	8c e1       	ldi	r24, 0x1C	; 28
  
  
    LCD_Write_String(" Hello, World!-");
 1e2:	98 df       	rcall	.-208    	; 0x114 <_Z7LCD_cmdh>
 1e4:	83 e1       	ldi	r24, 0x13	; 19
 1e6:	92 e0       	ldi	r25, 0x02	; 2
 1e8:	bd df       	rcall	.-134    	; 0x164 <_Z16LCD_Write_StringPc>
 1ea:	87 ea       	ldi	r24, 0xA7	; 167
 1ec:	91 e6       	ldi	r25, 0x61	; 97
 1ee:	01 97       	sbiw	r24, 0x01	; 1
 1f0:	f1 f7       	brne	.-4      	; 0x1ee <main+0x60>
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <main+0x66>
    _delay_ms(100);
  
    LCD_cmd(0x01); // clear screen
 1f4:	00 00       	nop
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	8d df       	rcall	.-230    	; 0x114 <_Z7LCD_cmdh>
 1fa:	83 ec       	ldi	r24, 0xC3	; 195
 1fc:	99 e0       	ldi	r25, 0x09	; 9
 1fe:	01 97       	sbiw	r24, 0x01	; 1
 200:	f1 f7       	brne	.-4      	; 0x1fe <main+0x70>
 202:	00 c0       	rjmp	.+0      	; 0x204 <main+0x76>
 204:	00 00       	nop
 206:	c3 cf       	rjmp	.-122    	; 0x18e <main>

00000208 <_exit>:
 208:	f8 94       	cli

0000020a <__stop_program>:
 20a:	ff cf       	rjmp	.-2      	; 0x20a <__stop_program>

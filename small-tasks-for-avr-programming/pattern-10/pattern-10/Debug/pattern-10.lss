
pattern-10.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000228  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001d4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000228  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000258  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000298  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d92  00000000  00000000  000002b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000c1d  00000000  00000000  0000104a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000038a  00000000  00000000  00001c67  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001ff4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005b3  00000000  00000000  00002018  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000010c  00000000  00000000  000025cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000026d7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	02 d0       	rcall	.+4      	; 0xfa <main>
  f6:	6c c0       	rjmp	.+216    	; 0x1d0 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <main>:
#include <util/delay.h>
#include <stdint.h>

int main(void) {
    // setup
	DDRA = 0x00;
  fa:	11 b8       	out	0x01, r1	; 1
	DDRB = 0xFF;
  fc:	8f ef       	ldi	r24, 0xFF	; 255
  fe:	84 b9       	out	0x04, r24	; 4
	PINA = 0xFF;
 100:	80 b9       	out	0x00, r24	; 0
	PORTB = 0x00;
 102:	15 b8       	out	0x05, r1	; 5
	uint8_t i = 0;
	
	while (1) {
		switch (PINA) {
 104:	80 b1       	in	r24, 0x00	; 0
 106:	8b 3f       	cpi	r24, 0xFB	; 251
 108:	a1 f1       	breq	.+104    	; 0x172 <main+0x78>
 10a:	20 f4       	brcc	.+8      	; 0x114 <main+0x1a>
 10c:	87 3f       	cpi	r24, 0xF7	; 247
 10e:	09 f4       	brne	.+2      	; 0x112 <main+0x18>
 110:	47 c0       	rjmp	.+142    	; 0x1a0 <main+0xa6>
 112:	f8 cf       	rjmp	.-16     	; 0x104 <main+0xa>
 114:	8d 3f       	cpi	r24, 0xFD	; 253
 116:	b1 f0       	breq	.+44     	; 0x144 <main+0x4a>
 118:	8e 3f       	cpi	r24, 0xFE	; 254
 11a:	a1 f7       	brne	.-24     	; 0x104 <main+0xa>
 11c:	80 e0       	ldi	r24, 0x00	; 0
			case 0xFE:
				i = 0;
				while (i != 8) {
 11e:	88 30       	cpi	r24, 0x08	; 8
 120:	89 f3       	breq	.-30     	; 0x104 <main+0xa>
					PORTB = (1 << i); ++i;
 122:	21 e0       	ldi	r18, 0x01	; 1
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	08 2e       	mov	r0, r24
 128:	02 c0       	rjmp	.+4      	; 0x12e <main+0x34>
 12a:	22 0f       	add	r18, r18
 12c:	33 1f       	adc	r19, r19
 12e:	0a 94       	dec	r0
 130:	e2 f7       	brpl	.-8      	; 0x12a <main+0x30>
 132:	25 b9       	out	0x05, r18	; 5
 134:	8f 5f       	subi	r24, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 136:	e7 ea       	ldi	r30, 0xA7	; 167
 138:	f1 e6       	ldi	r31, 0x61	; 97
 13a:	31 97       	sbiw	r30, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <main+0x40>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <main+0x46>
 140:	00 00       	nop
 142:	ed cf       	rjmp	.-38     	; 0x11e <main+0x24>
	PINA = 0xFF;
	PORTB = 0x00;
	uint8_t i = 0;
	
	while (1) {
		switch (PINA) {
 144:	80 e0       	ldi	r24, 0x00	; 0
				}
				break;
			
			case 0xFD:
				i = 0;
				while (i != 8) {
 146:	88 30       	cpi	r24, 0x08	; 8
 148:	e9 f2       	breq	.-70     	; 0x104 <main+0xa>
					PORTB = (1 << i); ++i;
 14a:	21 e0       	ldi	r18, 0x01	; 1
 14c:	30 e0       	ldi	r19, 0x00	; 0
 14e:	08 2e       	mov	r0, r24
 150:	02 c0       	rjmp	.+4      	; 0x156 <main+0x5c>
 152:	22 0f       	add	r18, r18
 154:	33 1f       	adc	r19, r19
 156:	0a 94       	dec	r0
 158:	e2 f7       	brpl	.-8      	; 0x152 <main+0x58>
 15a:	25 b9       	out	0x05, r18	; 5
 15c:	8f 5f       	subi	r24, 0xFF	; 255
 15e:	ff e5       	ldi	r31, 0x5F	; 95
 160:	2a ee       	ldi	r18, 0xEA	; 234
 162:	30 e0       	ldi	r19, 0x00	; 0
 164:	f1 50       	subi	r31, 0x01	; 1
 166:	20 40       	sbci	r18, 0x00	; 0
 168:	30 40       	sbci	r19, 0x00	; 0
 16a:	e1 f7       	brne	.-8      	; 0x164 <main+0x6a>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <main+0x74>
 16e:	00 00       	nop
 170:	ea cf       	rjmp	.-44     	; 0x146 <main+0x4c>
	PINA = 0xFF;
	PORTB = 0x00;
	uint8_t i = 0;
	
	while (1) {
		switch (PINA) {
 172:	80 e0       	ldi	r24, 0x00	; 0
				}
				break;
			
			case 0xFB:
				i = 0;
				while (i != 8) {
 174:	88 30       	cpi	r24, 0x08	; 8
 176:	31 f2       	breq	.-116    	; 0x104 <main+0xa>
					PORTB = (1 << i); ++i;
 178:	21 e0       	ldi	r18, 0x01	; 1
 17a:	30 e0       	ldi	r19, 0x00	; 0
 17c:	08 2e       	mov	r0, r24
 17e:	02 c0       	rjmp	.+4      	; 0x184 <main+0x8a>
 180:	22 0f       	add	r18, r18
 182:	33 1f       	adc	r19, r19
 184:	0a 94       	dec	r0
 186:	e2 f7       	brpl	.-8      	; 0x180 <main+0x86>
 188:	25 b9       	out	0x05, r18	; 5
 18a:	8f 5f       	subi	r24, 0xFF	; 255
 18c:	9f e9       	ldi	r25, 0x9F	; 159
 18e:	e6 e8       	ldi	r30, 0x86	; 134
 190:	f1 e0       	ldi	r31, 0x01	; 1
 192:	91 50       	subi	r25, 0x01	; 1
 194:	e0 40       	sbci	r30, 0x00	; 0
 196:	f0 40       	sbci	r31, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <main+0x98>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0xa2>
 19c:	00 00       	nop
 19e:	ea cf       	rjmp	.-44     	; 0x174 <main+0x7a>
	PINA = 0xFF;
	PORTB = 0x00;
	uint8_t i = 0;
	
	while (1) {
		switch (PINA) {
 1a0:	80 e0       	ldi	r24, 0x00	; 0
				}
				break;
			
			case 0xF7:
				i = 0;
				while (i != 8) {
 1a2:	88 30       	cpi	r24, 0x08	; 8
 1a4:	09 f4       	brne	.+2      	; 0x1a8 <main+0xae>
 1a6:	ae cf       	rjmp	.-164    	; 0x104 <main+0xa>
					PORTB = (1 << i); ++i;
 1a8:	21 e0       	ldi	r18, 0x01	; 1
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	08 2e       	mov	r0, r24
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <main+0xba>
 1b0:	22 0f       	add	r18, r18
 1b2:	33 1f       	adc	r19, r19
 1b4:	0a 94       	dec	r0
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <main+0xb6>
 1b8:	25 b9       	out	0x05, r18	; 5
 1ba:	8f 5f       	subi	r24, 0xFF	; 255
 1bc:	2f e3       	ldi	r18, 0x3F	; 63
 1be:	3d e0       	ldi	r19, 0x0D	; 13
 1c0:	93 e0       	ldi	r25, 0x03	; 3
 1c2:	21 50       	subi	r18, 0x01	; 1
 1c4:	30 40       	sbci	r19, 0x00	; 0
 1c6:	90 40       	sbci	r25, 0x00	; 0
 1c8:	e1 f7       	brne	.-8      	; 0x1c2 <main+0xc8>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <main+0xd2>
 1cc:	00 00       	nop
 1ce:	e9 cf       	rjmp	.-46     	; 0x1a2 <main+0xa8>

000001d0 <_exit>:
 1d0:	f8 94       	cli

000001d2 <__stop_program>:
 1d2:	ff cf       	rjmp	.-2      	; 0x1d2 <__stop_program>
